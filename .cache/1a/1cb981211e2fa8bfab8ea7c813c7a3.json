{"id":"node_modules/routington/lib/parse.js","dependencies":[{"name":"/home/markus/Dev/hackernews_client/package.json","includedInParent":true,"mtime":1553472662010},{"name":"/home/markus/Dev/hackernews_client/.babelrc","includedInParent":true,"mtime":1553464516663},{"name":"/home/markus/Dev/hackernews_client/node_modules/routington/package.json","includedInParent":true,"mtime":1553472661942},{"name":"assert","loc":{"line":2,"column":21},"parent":"/home/markus/Dev/hackernews_client/node_modules/routington/lib/parse.js","resolved":"/usr/lib/node_modules/parcel/node_modules/assert/assert.js"},{"name":"./routington","loc":{"line":4,"column":25},"parent":"/home/markus/Dev/hackernews_client/node_modules/routington/lib/parse.js","resolved":"/home/markus/Dev/hackernews_client/node_modules/routington/lib/routington.js"}],"generated":{"js":"\nvar assert = require('assert')\n\nvar Routington = require('./routington')\n\nRoutington.parse = function (string) {\n  var options = Parse(string)\n  assert(options, 'Invalid parsed string: ' + string)\n  return options\n}\n\nfunction Parse(string) {\n  var options = {\n    name: '',\n    string: {},\n    regex: ''\n  }\n\n  // Is a simple string\n  if (isValidSlug(string)) {\n    options.string[string] = true\n    return options\n  }\n\n  // Pipe-separated strings\n  if (isPipeSeparatedString(string)) {\n    string.split('|').forEach(function (x) {\n      options.string[x] = true\n    })\n    return options\n  }\n\n  // Find a parameter name for the string\n  string = string.replace(/^\\:\\w+\\b/, function (_) {\n    options.name = _.slice(1)\n    return ''\n  })\n\n  // Return if the string is now empty\n  if (!string) return options\n\n  // Assume the capture is a regex if there are\n  // non-word characters in the capture.\n  if (/^\\(.+\\)$/.test(string) && (string = string.slice(1, -1))) {\n    if (isPipeSeparatedString(string))\n      string.split('|').filter(function (x) {\n        options.string[x] = true\n      })\n    else\n      options.regex = string\n\n    return options\n  }\n}\n\nfunction isValidSlug(x) {\n  return x === ''\n    || /^[\\w\\.-]+$/.test(x)\n}\n\nfunction isPipeSeparatedString(x) {\n  return /^[\\w\\.\\-][\\w\\.\\-\\|]+[\\w\\.\\-]$/.test(x)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/routington/lib/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/routington/lib/parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"node_modules/routington/lib/parse.js":"\nvar assert = require('assert')\n\nvar Routington = require('./routington')\n\nRoutington.parse = function (string) {\n  var options = Parse(string)\n  assert(options, 'Invalid parsed string: ' + string)\n  return options\n}\n\nfunction Parse(string) {\n  var options = {\n    name: '',\n    string: {},\n    regex: ''\n  }\n\n  // Is a simple string\n  if (isValidSlug(string)) {\n    options.string[string] = true\n    return options\n  }\n\n  // Pipe-separated strings\n  if (isPipeSeparatedString(string)) {\n    string.split('|').forEach(function (x) {\n      options.string[x] = true\n    })\n    return options\n  }\n\n  // Find a parameter name for the string\n  string = string.replace(/^\\:\\w+\\b/, function (_) {\n    options.name = _.slice(1)\n    return ''\n  })\n\n  // Return if the string is now empty\n  if (!string) return options\n\n  // Assume the capture is a regex if there are\n  // non-word characters in the capture.\n  if (/^\\(.+\\)$/.test(string) && (string = string.slice(1, -1))) {\n    if (isPipeSeparatedString(string))\n      string.split('|').filter(function (x) {\n        options.string[x] = true\n      })\n    else\n      options.regex = string\n\n    return options\n  }\n}\n\nfunction isValidSlug(x) {\n  return x === ''\n    || /^[\\w\\.-]+$/.test(x)\n}\n\nfunction isPipeSeparatedString(x) {\n  return /^[\\w\\.\\-][\\w\\.\\-\\|]+[\\w\\.\\-]$/.test(x)\n}\n"},"lineCount":64}},"error":null,"hash":"46787cacbe7b2caaab53b64c7a9053b5","cacheData":{"env":{}}}