{"id":"node_modules/nanorouter/index.js","dependencies":[{"name":"/home/markus/Dev/hackernews_client/package.json","includedInParent":true,"mtime":1553470248662},{"name":"/home/markus/Dev/hackernews_client/.babelrc","includedInParent":true,"mtime":1553464516663},{"name":"/home/markus/Dev/hackernews_client/node_modules/nanorouter/package.json","includedInParent":true,"mtime":1553469754911},{"name":"assert","loc":{"line":1,"column":21},"parent":"/home/markus/Dev/hackernews_client/node_modules/nanorouter/index.js","resolved":"/home/markus/Dev/hackernews_client/node_modules/nanoassert/index.js"},{"name":"wayfarer","loc":{"line":2,"column":23},"parent":"/home/markus/Dev/hackernews_client/node_modules/nanorouter/index.js","resolved":"/home/markus/Dev/hackernews_client/node_modules/wayfarer/index.js"}],"generated":{"js":"var assert = require('assert')\nvar wayfarer = require('wayfarer')\n\n// electron support\nvar isLocalFile = (/file:\\/\\//.test(\n  typeof window === 'object' &&\n  window.location &&\n  window.location.origin\n))\n\n/* eslint-disable no-useless-escape */\nvar electron = '^(file:\\/\\/|\\/)(.*\\.html?\\/?)?'\nvar protocol = '^(http(s)?(:\\/\\/))?(www\\.)?'\nvar domain = '[a-zA-Z0-9-_\\.]+(:[0-9]{1,5})?(\\/{1})?'\nvar qs = '[\\?].*$'\n/* eslint-enable no-useless-escape */\n\nvar stripElectron = new RegExp(electron)\nvar prefix = new RegExp(protocol + domain)\nvar normalize = new RegExp('#')\nvar suffix = new RegExp(qs)\n\nmodule.exports = Nanorouter\n\nfunction Nanorouter (opts) {\n  if (!(this instanceof Nanorouter)) return new Nanorouter(opts)\n  opts = opts || {}\n  this.router = wayfarer(opts.default || '/404')\n}\n\nNanorouter.prototype.on = function (routename, listener) {\n  assert.equal(typeof routename, 'string')\n  routename = routename.replace(/^[#/]/, '')\n  this.router.on(routename, listener)\n}\n\nNanorouter.prototype.emit = function (routename) {\n  assert.equal(typeof routename, 'string')\n  routename = pathname(routename, isLocalFile)\n  return this.router.emit(routename)\n}\n\nNanorouter.prototype.match = function (routename) {\n  assert.equal(typeof routename, 'string')\n  routename = pathname(routename, isLocalFile)\n  return this.router.match(routename)\n}\n\n// replace everything in a route but the pathname and hash\nfunction pathname (routename, isElectron) {\n  if (isElectron) routename = routename.replace(stripElectron, '')\n  else routename = routename.replace(prefix, '')\n  return decodeURI(routename.replace(suffix, '').replace(normalize, '/'))\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/nanorouter/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/nanorouter/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/nanorouter/index.js":"var assert = require('assert')\nvar wayfarer = require('wayfarer')\n\n// electron support\nvar isLocalFile = (/file:\\/\\//.test(\n  typeof window === 'object' &&\n  window.location &&\n  window.location.origin\n))\n\n/* eslint-disable no-useless-escape */\nvar electron = '^(file:\\/\\/|\\/)(.*\\.html?\\/?)?'\nvar protocol = '^(http(s)?(:\\/\\/))?(www\\.)?'\nvar domain = '[a-zA-Z0-9-_\\.]+(:[0-9]{1,5})?(\\/{1})?'\nvar qs = '[\\?].*$'\n/* eslint-enable no-useless-escape */\n\nvar stripElectron = new RegExp(electron)\nvar prefix = new RegExp(protocol + domain)\nvar normalize = new RegExp('#')\nvar suffix = new RegExp(qs)\n\nmodule.exports = Nanorouter\n\nfunction Nanorouter (opts) {\n  if (!(this instanceof Nanorouter)) return new Nanorouter(opts)\n  opts = opts || {}\n  this.router = wayfarer(opts.default || '/404')\n}\n\nNanorouter.prototype.on = function (routename, listener) {\n  assert.equal(typeof routename, 'string')\n  routename = routename.replace(/^[#/]/, '')\n  this.router.on(routename, listener)\n}\n\nNanorouter.prototype.emit = function (routename) {\n  assert.equal(typeof routename, 'string')\n  routename = pathname(routename, isLocalFile)\n  return this.router.emit(routename)\n}\n\nNanorouter.prototype.match = function (routename) {\n  assert.equal(typeof routename, 'string')\n  routename = pathname(routename, isLocalFile)\n  return this.router.match(routename)\n}\n\n// replace everything in a route but the pathname and hash\nfunction pathname (routename, isElectron) {\n  if (isElectron) routename = routename.replace(stripElectron, '')\n  else routename = routename.replace(prefix, '')\n  return decodeURI(routename.replace(suffix, '').replace(normalize, '/'))\n}\n"},"lineCount":55}},"error":null,"hash":"9411b730031274280ed4ee31942f58a4","cacheData":{"env":{}}}