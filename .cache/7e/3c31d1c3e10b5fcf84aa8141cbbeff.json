{"id":"node_modules/wayfarer/trie.js","dependencies":[{"name":"/home/markus/Dev/hackernews_client/package.json","includedInParent":true,"mtime":1553470248662},{"name":"/home/markus/Dev/hackernews_client/.babelrc","includedInParent":true,"mtime":1553464516663},{"name":"/home/markus/Dev/hackernews_client/node_modules/wayfarer/package.json","includedInParent":true,"mtime":1553469754911},{"name":"xtend/mutable","loc":{"line":1,"column":21},"parent":"/home/markus/Dev/hackernews_client/node_modules/wayfarer/trie.js","resolved":"/home/markus/Dev/hackernews_client/node_modules/xtend/mutable.js"},{"name":"assert","loc":{"line":2,"column":21},"parent":"/home/markus/Dev/hackernews_client/node_modules/wayfarer/trie.js","resolved":"/usr/lib/node_modules/parcel/node_modules/assert/assert.js"},{"name":"xtend","loc":{"line":3,"column":20},"parent":"/home/markus/Dev/hackernews_client/node_modules/wayfarer/trie.js","resolved":"/home/markus/Dev/hackernews_client/node_modules/xtend/immutable.js"}],"generated":{"js":"var mutate = require('xtend/mutable')\nvar assert = require('assert')\nvar xtend = require('xtend')\n\nmodule.exports = Trie\n\n// create a new trie\n// null -> obj\nfunction Trie () {\n  if (!(this instanceof Trie)) return new Trie()\n  this.trie = { nodes: {} }\n}\n\n// create a node on the trie at route\n// and return a node\n// str -> null\nTrie.prototype.create = function (route) {\n  assert.equal(typeof route, 'string', 'route should be a string')\n  // strip leading '/' and split routes\n  var routes = route.replace(/^\\//, '').split('/')\n\n  function createNode (index, trie) {\n    var thisRoute = (routes.hasOwnProperty(index) && routes[index])\n    if (thisRoute === false) return trie\n\n    var node = null\n    if (/^:|^\\*/.test(thisRoute)) {\n      // if node is a name match, set name and append to ':' node\n      if (!trie.nodes.hasOwnProperty('$$')) {\n        node = { nodes: {} }\n        trie.nodes['$$'] = node\n      } else {\n        node = trie.nodes['$$']\n      }\n\n      if (thisRoute[0] === '*') {\n        trie.wildcard = true\n      }\n\n      trie.name = thisRoute.replace(/^:|^\\*/, '')\n    } else if (!trie.nodes.hasOwnProperty(thisRoute)) {\n      node = { nodes: {} }\n      trie.nodes[thisRoute] = node\n    } else {\n      node = trie.nodes[thisRoute]\n    }\n\n    // we must recurse deeper\n    return createNode(index + 1, node)\n  }\n\n  return createNode(0, this.trie)\n}\n\n// match a route on the trie\n// and return the node\n// str -> obj\nTrie.prototype.match = function (route) {\n  assert.equal(typeof route, 'string', 'route should be a string')\n\n  var routes = route.replace(/^\\//, '').split('/')\n  var params = {}\n\n  function search (index, trie) {\n    // either there's no match, or we're done searching\n    if (trie === undefined) return undefined\n    var thisRoute = routes[index]\n    if (thisRoute === undefined) return trie\n\n    if (trie.nodes.hasOwnProperty(thisRoute)) {\n      // match regular routes first\n      return search(index + 1, trie.nodes[thisRoute])\n    } else if (trie.name) {\n      // match named routes\n      try {\n        params[trie.name] = decodeURIComponent(thisRoute)\n      } catch (e) {\n        return search(index, undefined)\n      }\n      return search(index + 1, trie.nodes['$$'])\n    } else if (trie.wildcard) {\n      // match wildcards\n      try {\n        params['wildcard'] = decodeURIComponent(routes.slice(index).join('/'))\n      } catch (e) {\n        return search(index, undefined)\n      }\n      // return early, or else search may keep recursing through the wildcard\n      return trie.nodes['$$']\n    } else {\n      // no matches found\n      return search(index + 1)\n    }\n  }\n\n  var node = search(0, this.trie)\n\n  if (!node) return undefined\n  node = xtend(node)\n  node.params = params\n  return node\n}\n\n// mount a trie onto a node at route\n// (str, obj) -> null\nTrie.prototype.mount = function (route, trie) {\n  assert.equal(typeof route, 'string', 'route should be a string')\n  assert.equal(typeof trie, 'object', 'trie should be a object')\n\n  var split = route.replace(/^\\//, '').split('/')\n  var node = null\n  var key = null\n\n  if (split.length === 1) {\n    key = split[0]\n    node = this.create(key)\n  } else {\n    var head = split.join('/')\n    key = split[0]\n    node = this.create(head)\n  }\n\n  mutate(node.nodes, trie.nodes)\n  if (trie.name) node.name = trie.name\n\n  // delegate properties from '/' to the new node\n  // '/' cannot be reached once mounted\n  if (node.nodes['']) {\n    Object.keys(node.nodes['']).forEach(function (key) {\n      if (key === 'nodes') return\n      node[key] = node.nodes[''][key]\n    })\n    mutate(node.nodes, node.nodes[''].nodes)\n    delete node.nodes[''].nodes\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/wayfarer/trie.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/wayfarer/trie.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}}],"sources":{"node_modules/wayfarer/trie.js":"var mutate = require('xtend/mutable')\nvar assert = require('assert')\nvar xtend = require('xtend')\n\nmodule.exports = Trie\n\n// create a new trie\n// null -> obj\nfunction Trie () {\n  if (!(this instanceof Trie)) return new Trie()\n  this.trie = { nodes: {} }\n}\n\n// create a node on the trie at route\n// and return a node\n// str -> null\nTrie.prototype.create = function (route) {\n  assert.equal(typeof route, 'string', 'route should be a string')\n  // strip leading '/' and split routes\n  var routes = route.replace(/^\\//, '').split('/')\n\n  function createNode (index, trie) {\n    var thisRoute = (routes.hasOwnProperty(index) && routes[index])\n    if (thisRoute === false) return trie\n\n    var node = null\n    if (/^:|^\\*/.test(thisRoute)) {\n      // if node is a name match, set name and append to ':' node\n      if (!trie.nodes.hasOwnProperty('$$')) {\n        node = { nodes: {} }\n        trie.nodes['$$'] = node\n      } else {\n        node = trie.nodes['$$']\n      }\n\n      if (thisRoute[0] === '*') {\n        trie.wildcard = true\n      }\n\n      trie.name = thisRoute.replace(/^:|^\\*/, '')\n    } else if (!trie.nodes.hasOwnProperty(thisRoute)) {\n      node = { nodes: {} }\n      trie.nodes[thisRoute] = node\n    } else {\n      node = trie.nodes[thisRoute]\n    }\n\n    // we must recurse deeper\n    return createNode(index + 1, node)\n  }\n\n  return createNode(0, this.trie)\n}\n\n// match a route on the trie\n// and return the node\n// str -> obj\nTrie.prototype.match = function (route) {\n  assert.equal(typeof route, 'string', 'route should be a string')\n\n  var routes = route.replace(/^\\//, '').split('/')\n  var params = {}\n\n  function search (index, trie) {\n    // either there's no match, or we're done searching\n    if (trie === undefined) return undefined\n    var thisRoute = routes[index]\n    if (thisRoute === undefined) return trie\n\n    if (trie.nodes.hasOwnProperty(thisRoute)) {\n      // match regular routes first\n      return search(index + 1, trie.nodes[thisRoute])\n    } else if (trie.name) {\n      // match named routes\n      try {\n        params[trie.name] = decodeURIComponent(thisRoute)\n      } catch (e) {\n        return search(index, undefined)\n      }\n      return search(index + 1, trie.nodes['$$'])\n    } else if (trie.wildcard) {\n      // match wildcards\n      try {\n        params['wildcard'] = decodeURIComponent(routes.slice(index).join('/'))\n      } catch (e) {\n        return search(index, undefined)\n      }\n      // return early, or else search may keep recursing through the wildcard\n      return trie.nodes['$$']\n    } else {\n      // no matches found\n      return search(index + 1)\n    }\n  }\n\n  var node = search(0, this.trie)\n\n  if (!node) return undefined\n  node = xtend(node)\n  node.params = params\n  return node\n}\n\n// mount a trie onto a node at route\n// (str, obj) -> null\nTrie.prototype.mount = function (route, trie) {\n  assert.equal(typeof route, 'string', 'route should be a string')\n  assert.equal(typeof trie, 'object', 'trie should be a object')\n\n  var split = route.replace(/^\\//, '').split('/')\n  var node = null\n  var key = null\n\n  if (split.length === 1) {\n    key = split[0]\n    node = this.create(key)\n  } else {\n    var head = split.join('/')\n    key = split[0]\n    node = this.create(head)\n  }\n\n  mutate(node.nodes, trie.nodes)\n  if (trie.name) node.name = trie.name\n\n  // delegate properties from '/' to the new node\n  // '/' cannot be reached once mounted\n  if (node.nodes['']) {\n    Object.keys(node.nodes['']).forEach(function (key) {\n      if (key === 'nodes') return\n      node[key] = node.nodes[''][key]\n    })\n    mutate(node.nodes, node.nodes[''].nodes)\n    delete node.nodes[''].nodes\n  }\n}\n"},"lineCount":137}},"error":null,"hash":"72f938b6895266d223a4cdaf90d0fe0a","cacheData":{"env":{}}}